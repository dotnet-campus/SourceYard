<Project Sdk="Microsoft.NET.Sdk">

  <PropertyGroup>
    <!-- Project building properties -->
    <OutputType>Exe</OutputType>
    <Nullable>enable</Nullable>
    <LangVersion>latest</LangVersion>
    <TargetFrameworks>net45;netcoreapp2.0</TargetFrameworks>
    <MSBuildWarningsAsMessages>$(MSBuildWarningsAsMessages);NETSDK1138</MSBuildWarningsAsMessages>
  </PropertyGroup>
  
  <PropertyGroup>
    <GeneratePackageOnBuild>true</GeneratePackageOnBuild>
    <NoPackageAnalysis>true</NoPackageAnalysis>
    <DevelopmentDependency>true</DevelopmentDependency>
      
    <!-- 设置支持的运行时版本，当前 dotnet core 设置为 2.0 是古老的版本，需要通过如下配置让只安装新版本的设备可以运行 -->
    <!-- [选择要使用哪个 .NET 版本](https://docs.microsoft.com/zh-cn/dotnet/core/versions/selection) -->
    <!-- 如果缺少所请求的主要版本，则前滚到下一个可用的更高主要版本和最低的次要版本 -->
    <RollForward>Major</RollForward>
 
    <!-- 因为只把主软件复制过去，依赖的库没有复制，所以不使用这个方法 -->
    <!-- 在下面可以看到使用的是复制整个文件夹 -->
    <!--<BuildOutputTargetFolder>tools</BuildOutputTargetFolder>-->
  </PropertyGroup>

  <ItemGroup>
    <Compile Remove="bin\**" />
    <EmbeddedResource Remove="bin\**" />
    <None Remove="*.DotSettings" />
    <None Remove="bin\**\**" />
  </ItemGroup>

  <ItemGroup>
    <Folder Include="Properties\" />
  </ItemGroup>

  <ItemGroup>
    <PackageReference Include="dotnetCampus.CommandLine.Source" Version="3.3.0" PrivateAssets="All" />
    <PackageReference Include="dotnetCampus.Configurations.Source" Version="1.6.9" PrivateAssets="All" />
    <PackageReference Include="Walterlv.NullableAttributes.Source" Version="6.0.0" PrivateAssets="All" />
    <PackageReference Include="dotnetCampus.MSBuildUtils.Source" Version="1.1.1-alpha01">
      <PrivateAssets>all</PrivateAssets>
      <IncludeAssets>runtime; build; native; contentfiles; analyzers</IncludeAssets>
    </PackageReference>

    <!-- 现在 CI 上没有 .NET Framework 4.5 的支持，需要手动加上 Microsoft.NETFramework.ReferenceAssemblies 才能修复构建。详细请看 https://blog.walterlv.com/post/support-old-netfx-on-vs2022-or-later -->
    <PackageReference Include="Microsoft.NETFramework.ReferenceAssemblies" Version="1.0.2" PrivateAssets="all" />
  </ItemGroup>

  <ItemGroup Condition="$(TargetFramework)=='net45'">
    <Reference Include="System.Web" />
    <PackageReference Include="System.ValueTuple" Version="4.5" PrivateAssets="All" />
  </ItemGroup>

  <ItemGroup>
    <!--复制打包用到文件-->
    <None Update="Assets\Target\**\*">
      <CopyToOutputDirectory>PreserveNewest</CopyToOutputDirectory>
    </None>
  </ItemGroup>

    <Target Name="IncludeAllDependencies" BeforeTargets="_GetPackageFiles">
      <ItemGroup>
       <!-- 编译目标项目 -->
        <None Include="Assets\Current\Core.targets" Pack="True" PackagePath="build\Core.targets" />
        <None Include="Assets\Current\build\PackageId.props" Pack="True" PackagePath="build\$(PackageId).props" />
        <None Include="Assets\Current\build\PackageId.targets" Pack="True" PackagePath="build\$(PackageId).targets" />

        <!-- 编译多框架的目标项目 -->
        <None Include="Assets\Current\buildMultiTargeting\PackageId.props" Pack="True" PackagePath="buildMultiTargeting\$(PackageId).props" />
        <None Include="Assets\Current\buildMultiTargeting\PackageId.targets" Pack="True" PackagePath="buildMultiTargeting\$(PackageId).targets" />

        <!-- 准备编译工具 -->
        <None Include="$(OutputPath)**\**" Pack="True" PackagePath="tools\" Visible="false" />
        
        <!-- 其他杂项 -->
        <None Include="Assets\README.md" Pack="True" PackagePath="" />
      </ItemGroup>
    </Target>

</Project>
